.TH hev-testSuite 5 "April 2015"

.SH NAME

hev-testSuite

.SH SYNOPSIS

\fBhev-testSuite\fR - HEV Software Test Suite

.SH DESCRIPTION

\fBhev-testSuite\fR is the name of a collection of \fBiris\fR files
which when used with loadable geometry files implement a series of
tests to verify to proper function of various components, features and
functionality of the \fBHEV\fR software. In this context, a \fItest\fR
is typically running a command to render an image and collect the
image for comparison analysis against a base-line image.

.P
\fBhev-testSuite\fR is not a specific command. It is one of two
components in a larger system of collecting test data and analyzing
the data for \fIPASS\fR of \fIFAIL\fR. See the section below titled
\fBThe BIG Picture\fR.


.IP
\fBThe current implementation is not complete. It's a proto-type skeleton
structure and examples to establish usage and development
procedures. It will be expanded and further developed into a
working system as a student project during summer 2015.\fR

.P
The underlying design philosophy is tests are implemented in
\fBiris\fR files and run with the \fBirisfly\fR command. Wrapper
\fIrun.sh\fR scripts can be implemented and used for convenience if
desired. A \fImaster\fR run script to execute tests in a sequence
could also be created. These convenience scripts are not currently
implemented.

.P
All user files are available in \fB$HEV_IDEA_DIR/testSuite\fR.  To make
these files conveniently available, i.e. reference by short name, the
\fBOSG_FILE_PATH\fR environment variable should be modified using this
command:
.IP
export OSG_FILE_PATH=$OSG_FILE_PATH:$HEV_IDEA_DIR/testSuite

.P
By default all snaphot images (\fB.pam\fR) generated by these tests
are written to /tmp at the end of the test when it terminates.
For example, after running a test (see below):
.IP
ls /tmp/frameGrabber-${USER}-*
.P
Each test reuses the same output snapshot names, so be sure to
copy the images between tests.

.IP
\fBWARNING:\fR the files for all current and future tests implemented
are placed in a common location, \fB$HEV_IDEA_DIR/testSuite\fR, for
general usage. This means that all files implementing different test
should have different names (unless a file is purposely shared among
multiples tests).



.SH "USING HEV-TESTSUITE"

Using \fBhev-testSuite\fR is simply a matter of running \fBirisfly\fR
and specifying the \fBiris\fR files which implement the desired test.
Below is a full list of the currently implemented tests.  They should
work by copy&paste into a shell window.

.P
\fBExample 1:\fR Display a large number of white single pixel points,
rotate to Front, Left, Right, etc and make a snapshot of the display
at each position.

.IP
irisfly --ex sideViews.timeline.iris piPoints.savg


.P
\fBExample 2:\fR
Like the previous example, but a small number of points.
.IP
irisfly --ex sideViews.timeline.iris cylinderPoints.savg


.P
\fBExample 3:\fR
Like the previous example, but a small number of lines.
.IP
irisfly --ex sideViews.timeline.iris cylinderLines.savg



.P
\fBExample 4:\fR
Like the previous example, but a display points as a tetrahedron.
.IP
irisfly --ex sideViews.timeline.iris  tetrahedronPoints.savg


.P
\fBExample 5:\fR
Like the previous example, but a display lines as a tetrahedron.
.IP
irisfly --ex sideViews.timeline.iris tetrahedronLines.savg


.P
\fBExample 6:\fR
Like the previous example, but display caffeine molecule model.
.IP
irisfly --ex sideViews.timeline.iris caffeineMolecule.osg


.P
\fBExample 7:\fR Creates a simple scenegraph displaying four objects. It
moves into the positions as above. While moving \fBiris\fR FiFO commands
turns objects off, then back on.
.IP
irisfly --ex objectsOnOff.timeline.iris sgSample.iris


.P
\fBExample 8:\fR Shader solid sphere example.
.IP
irisfly --back 1 1 1 --ex desktopWindowTraits512.iris solid.iris solidControls.timeline.iris


.SH "The BIG Picture"
.P
This \fBhev-testSuite\fR collection consists of two parts that implement the
complete HEV functionality test.

.IP
\fBData Generation and Collection\fR is typically done using the
\fBhev-testSuite\fR commands to generate the test data, i.e do the
rendering and image snap shots.

.IP
\fBPass/Fail Analysis\fR is preformed in \fItestCases\fR located in
\fB$HEVROOT/test/renderTest\fR.

.P
Thus, the test cases are the user interface and implements the
specific of individual tests. For more information on the test cases,
refer to \fB$HEVROOT/test/renderTest/ReadMe.txt\fR.

.SH "DEVELOPMENT"
.P
To develop and add new tests to this test suite, setup a personal HEV
development area by cloning a fresh repository from the GIT HEV
repository. Follow the GIT documentation in the CAVE Wiki.
Specifically, follow the \fBDevelopment Process\fR described in
.br
.IP
https://snippet.cam.nist.gov:8000/rave/wiki/Notes_on_Using_Git_for_HEV


.P
Design your HEV functionality test in two parts as defined above in
the \fBThe BIG Picture\fR section above.
.P
Implement your rendering as a test within the \fBhev-testSuite\fR
described in this document and contained in a sub-directory of the
\fBhev-testSuite\fR source named \fItest_XXXXXXXXX\fR.
.P
Implement a \fItest case\fR following the examples in
\fB$HEVROOT/test/renderTest\fR in a sub-directory named \fItestCase_XXXXXXXXX\fR.


.SH "NOTES FOR THE SUMMER 2015 STUDENT PROJECT"

.P
You will be developing in your own private copy of the HEV software
tree. You will be following the same procedures as HPCVG staff use to
create and install HEV software. However, you will have \fIRead
Only\fR access to the HEV GIT repository. Contact Wes Griffin or Steve
Satterfield for questions and when it time to integrate your code into
the production HEV repository.
.P
However, you can collaborate among yourselves by pulling changes from
each other.




.SH "SEE ALSO"
irisfly(1),
.br
${HEVROOT}/iris/doc/html/control.html


.SH AUTHORS

.PP
Steve Satterfield, steve@nist.gov
.br
\fBhttp://www.nist.gov/acmd/hpcvg/\fR


\"  LocalWords:  hev testSuite fBhev fR fBiris fBHEV proto fBirisfly fIrun br
\"  LocalWords:  fImaster irisfly fIThe fItestSuite filename IP snaphot fB pam
\"  LocalWords:  fBExample tetrahedronPoints savg scenegraph FiFO HEVROOT fBThe
\"  LocalWords:  DIRd OSG piPoints cylinderPoints cylinderLines osg sgSample
\"  LocalWords:  tetrahedronLines caffeineMolecule Shader solidControls HPCVG
\"  LocalWords:  desktopWindowTraits512 fBDevelopment fIRead Wes fBOSG fImake
\"  LocalWords:  GNUmakefile tmp fItest fIPASS fIFAIL fBData fBPass fItestCases
\"  LocalWords:  XXXXXXXXX fItestCase
