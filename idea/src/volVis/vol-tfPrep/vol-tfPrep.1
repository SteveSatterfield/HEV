.\" This is a comment
.\" The extra parameters on .TH show up in the headers
.TH vol-tfPrep 1 " " "NIST/ACMD/HPCVG" "HEV"
.SH NAME
vol-tfPrep - Prepare transfer function for direct volume rendering.

.SH SYNOPSIS
.B vol-tfPrep 
transferFuncFn  [ outputFnPrefix ]

.SH DESCRIPTION

\fBvol-tfPrep\fR 
reads a transfer function file and generates the GLSL source code
file(s) and the texture file(s) required for direct volume rendering
using the transfer function.

This program can be called independently, but it is also called
from the program vol-visBuilder.


.TP
.B transferFuncFn
The file that contains the transfer function definition.
The format of this file is described in the man
page \fIvol-transferFuncFmt\fR.

.TP
.B [ outputFnPrefix ]
If specified, this gives a prefix string from which the file names of the
generated GLSL and texture files are constructed.  
If this string ends with "/", then the files are placed in the indicated
directory.  If the string does not end in "/", then the output file
names are generated by appending appropriate strings to the end of
this string.  
If this is not specified, then the output files are placed in the
current directory.

.SH OPTIONS
.TP
.B --volume  volumeFileName
Specifies the name of a volume data set in \fI.mha\fR format that
may be needed in the preparation of the the transfer function.
Currently only the \fIGkBoundary\fR transfer functions can use this
option; see the man page for \fIvol-transferFuncFmt\fR.  

.SH OUTPUT

This program generates two types of files:

.RS
* GLSL source code:  The file name will end in \fI.glsl\fR. This code should typically be included in the fragment shader.

* Texture files: The texture files will be in \fI.mha\fR format.  Textures are used by the GLSL code where they appear as \fIsampler\fR variables.
.RE

In addition, this program writes information to standard output about the
files produced and some resources required by the GLSL code.
This information is formatted for parsing by other software 
(such as vol-visBuilder), but it is 
(we hope) human readable.  This output is formatted into a series of
lines; each line is in one of the following forms:

.TP
.I GLSL  fileName.glsl  functionName
This indicates that GLSL source code containing a function 
named \fIfunctionName\fR has been written to a file named \fIfileName.glsl\fR.

.TP
.I TEXTURE txtrFileName.mha glslVarName nChan nDim [ min max  min max...]
This indicates that a texture has been written to the file 
\fItxtrFileName.mha\fR and
this texture corresponds to the GLSL variable \fIglslVarName\fR in the
generated GLSL source code. The texture has \fInChan\fR channels 
(components) per element and has \fInDim\fR dimensions.  
The data values used to do the texture lookup are expected 
to fall into the ranges specified by the \fImin/max\fR pairs.  
There should be one min/max pair for each dimension.

.TP
.I REQ_EXTERNAL stdName  objType  dataType  glslName
This indicates that the GLSL code for the transfer function requires
an external variable or function (beyond the GLSL built-ins).
.RS
.br
\fIstdName\fR gives a standardized name for the external
.br
\fIobjType\fR indicates whether it is a function or variable
.br
\fIdataType\fR gives the GLSL data type of the external
.br
\fIglslName\fR gives its name in the generated GLSL source code.
.RE






.SH EXAMPLES

.B vol-tfPrep $HEVROOT/idea/src/volVis/testData/atmos.tf myVis

This command prepares the transfer function described in the file 
\fIatmos.tf\fR by generating the GLSL source file \fImyVis.CO2D.glsl\fR
and the texture file \fImyVis.CO2D0000.mha\fR.

This command generates the following output (in the format described above):

.nf
    GLSL myVis.CO2D.glsl CO2D
    TEXTURE myVis.CO2D0000.mha CO2D_RgbaLut1D 4 1  -20 1
    REQ_EXTERNAL  volGradCalc  func  vec3   volGradCalc
    REQ_EXTERNAL  volPos       func  vec3   volPos
    REQ_EXTERNAL  volPosPrev   func  vec3   volPosPrev
    REQ_EXTERNAL  volScalar    func  float  volScalar
.fi

Note that the GLSL code in \fImyVis.CO2D.glsl\fR makes use of the
externals specified by the \fIREQ_EXTERNAL\fR lines.



.SH SEE ALSO
vol-visBuilder, hev-convertDataArray, vol-transferFuncFmt


