#!/usr/bin/env python

import sys
import vtk
from optparse import OptionParser

def showHelp():
    sys.stderr.write('\nUsage:\nhev-GridResample [options] inFName outFName\n')
    sys.exit(1)

use = "Usage: %prog [options] inFName outFName"

# PARSE COMMAND LINE
parser = OptionParser(usage = use)

# ASSIGN VALUES
parser.add_option("--interp", "--i", dest="interp", type="string", default="linear")
parser.add_option("--magFactors", "--m", dest="mag", nargs=3, type="float")
parser.add_option("--resampGrid", "--r", dest="resamp", type="string")

options, args = parser.parse_args()

#SET INPUT AND OUTPUT FILE
inputdatafile = args[-2]
outputdatafile = args[-1]

#DATAREADER
read = vtk.vtkGenericDataObjectReader()
read.SetFileName(inputdatafile)

if options.mag:

    if read.IsFileStructuredPoints() != True:
        print "Input file is not a structured points file and therefor not eligeable"
        print "for being used in combination with the --magFactors function."
        showHelp()
    read2 = vtk.vtkStructuredPointsReader()
    read2.SetFileName(inputdatafile)

    probe = vtk.vtkImageReslice()
    probe.SetInputConnection(read2.GetOutputPort())
    probe.TransformInputSamplingOff()

    if options.interp == "linear":
        probe.SetInterpolationModeToLinear()
    elif options.interp == "cubic":
        probe.SetInterpolationModeToCubic()
    elif options.interp == "neighbour":
        probe.SetInterpolationModeToNearestNeighbour()
    else:
        print "--interp MODE. MODE can either be 'linear', 'cubic' or 'neighbour'."
        print "Default: linear."
        showHelp()

    s = probe.GetOutput().GetSpacing()
    x = s[0] * options.mag[0]
    y = s[1] * options.mag[1]
    z = s[2] * options.mag[2]
    probe.SetOutputSpacing(x,y,z)
    probe.SetOutputOrigin(probe.GetOutput().GetOrigin())

elif options.resamp:
    probe = vtk.vtkProbeFilter()
    read2 = vtk.vtkGenericDataObjectReader()
    read2.SetFileName(options.resamp)
    probe.SetInputConnection(read2.GetOutputPort())
    probe.SetSource(read.GetOutput())

else:
    print "Either --magFactor or --resampGrid option have to be specified."
    showHelp()

#FILEWRITER
write = vtk.vtkGenericDataObjectWriter()
write.SetFileTypeToASCII()
write.SetInput(probe.GetOutput())
write.SetFileName(outputdatafile)
write.Write()
write.Update()
