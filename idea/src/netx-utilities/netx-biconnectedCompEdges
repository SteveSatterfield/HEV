#!/usr/bin/env python3
#Graph must be undirected
#Arg3 is the component you want based on output from biconnectedComp
import networkx as nx
import sys

if(len(sys.argv)==2):
    myFile = open(sys.argv[1], 'r')

else:
    print("Error: wrong number of arguments.")
    sys.exit()

lines = []
for edge in myFile:
    lines.append(tuple(edge.split()))
G = nx.MultiGraph()

if(len(lines[0])==2):
    G.add_edges_from(lines)
elif(len(lines[0])>=3):
    for item in lines:
        G.add_weighted_edges_from([(item[0],item[1],float(item[2]))])
else:
    print("Error in input file. Wrong number of elements per line.")
    sys.exit()

myList = nx.biconnected_component_edges(G)

for item in range(len(myList)):
    print(item,"- Edges:",myList[item])
  
myFile.close()
