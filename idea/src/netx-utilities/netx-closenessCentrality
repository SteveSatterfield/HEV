#!/usr/bin/env python3

#User must specify whether graph is directed or not directed.

import networkx as nx
import sys

if(len(sys.argv)==3):
    myFile = open(sys.argv[1], 'r')
    if(sys.argv[2]=='d'):
        G = nx.MultiDiGraph()
    elif(sys.argv[2]=='u'):
        G = nx.MultiGraph()
    else:
        print("Error: wrong input for graph type. Use 'd' for directed or 'u' for undirected.")
        sys.exit()
else:
    print("Error: wrong number of arguments given")
    sys.exit()
lines = []

for edge in myFile:
    lines.append(tuple(edge.split()))

if(len(lines[0])==2):
    G.add_edges_from(lines)
elif(len(lines[0])>=3):
     for item in lines:
            G.add_weighted_edges_from([(item[0],item[1],float(item[2]))])
else:
    print("Error with input file. Incorrect number of elements per line.")
    sys.exit()

cent = nx.closeness_centrality(G)

myList = [x for x in cent.items()]
myList.sort(key=lambda x: x[0])

for thing in myList:
    print(thing[0], thing[1])

myFile.close()
