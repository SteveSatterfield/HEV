#!/usr/bin/env python3
#Each edge in graph must have capacity/weight. If no capacity given, capacity
#for that edge is considered to be infinite. If no weight given, weight will
#be set to 1.
#input line ex: node1 node2 weight capacity
#arg1: edge-list file
#arg2: name of source node for the flow
#arg3: name of sink node for the flow
#MUST BE CONNECTED

import networkx as nx
import sys

if(len(sys.argv)==4):
    myFile = open(sys.argv[1], 'r')
else:
    print("Error: wrong number of arguments.")
    sys.exit()

lines = []
for edge in myFile:
    lines.append(tuple(edge.split()))

G=nx.DiGraph()

for item in lines:
    if(len(item)==2):
        G.add_edge(item[0], item[1], weight=0)
    elif(len(item)==3):
        G.add_edge(item[0], item[1], capacity=float(item[2]))
    elif(len(item)>=4):
        G.add_edge(item[0], item[1], weight=float(item[2]), capacity=float(item[3]))
    else:
        print("Error with input. Wrong number of arguments per line.")
        sys.exit()

myFile.close()

for key,value in  nx.max_flow_min_cost(G, sys.argv[2], sys.argv[3], capacity='capacity', weight='weight').items():
    for item, value2 in value.items():
        print("Edge:", key, item, "Flow:", value2)
