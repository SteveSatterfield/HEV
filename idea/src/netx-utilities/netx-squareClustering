#!/usr/bin/env python3

import networkx as nx
import sys

if(len(sys.argv)==3):
    myFile = open(sys.argv[1], 'r')
else:
    print("Error: wrong number of arguments given")
    sys.exit()

if(sys.argv[2]=='u'):
    G=nx.MultiGraph()
elif(sys.argv[2]=='d'):
    G=nx.MultiDiGraph()
else:
    print("Graph type incorrect. Use 'u' for undirected, 'd' for directed.")
    sys.exit()
lines = []
for edge in myFile:
    lines.append(tuple(edge.split()))

if(len(lines[0])==2):
    G.add_edges_from(lines)
elif(len(lines[0])>=3):
    for item in lines:
        G.add_weighted_edges_from([(item[0],item[1],float(item[2]))])
else:
    print("Error in input file. Wrong number of elements per line.")
    sys.exit()

for key, value in nx.square_clustering(G).items():
    print(key, value)

myFile.close()
